pipeline {
    agent any
    
    tools {
        terraform 'terraform_plugin'
    }

    parameters {
        string(name: 'environment', defaultValue: 'terraform', description: 'Workspace/environment file to use for deployment')
        booleanParam(name: 'S3', defaultValue: false, description: 'Create-S3 for tfState')
        booleanParam(name: 'destroy', defaultValue: false, description: 'Destroy Terraform build?')
    }
    
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')

    }

    stages {

        stage('checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('S3') {
            when {
                equals expected: true, actual: params.S3
            }

            steps {
                dir("Part_2/003_RemoteState") {
                    sh 'pwd'
                    sh 'ls'
                    sh "terraform init -input=false"
                    sh "terraform apply --auto-approve -input=false"
                }
            }
        }

        stage('Apply') {
            when {
                not {
                    equals expected: true, actual: params.destroy
                }
            }
            steps {
                dir("Part_2/003_terraform") {
                    sh 'pwd'
                    sh 'ls'
                    sh "terraform init -input=false -reconfigure "
                    sh "terraform apply --auto-approve -input=false"
                }

            }
        }
        
        stage('Deploy') {
            when {
                not {
                    equals expected: true, actual: params.destroy
                }
            }
            steps {
                dir("Part_2/guestbook-go") {
                    withKubeConfig([credentialsId: 'yoni-eks', serverUrl: 'https://3F2993457953F098BD922D58D7D0A6D4.gr7.us-east-2.eks.amazonaws.com']) {
                        sh 'kubectl create -f redis-master-controller.json'
                        sh 'kubectl create -f redis-master-service.json'
                        sh 'kubectl create -f redis-slave-controller.json'
                        sh 'kubectl create -f redis-slave-service.json'
                        sh 'kubectl create -f guestbook-controller.json'
                        sh 'kubectl create -f guestbook-service.json'
                    }
                }

            }
        }


        stage('Destroy') {
            when {
                equals expected: true, actual: params.destroy
            }

            steps {
                dir("Part_2/003_terraform") {
                    sh 'pwd'
                    sh "terraform destroy --auto-approve"
                }
            }
        }

    }
}